var searchIndex = JSON.parse('{\
"db_core":{"doc":"<code>Starchart</code> database operations","t":[3,8,3,4,13,8,10,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,11,11,11,0,11,11,11,0,11,11,11,10,12,10,11,11,11,11,5,12,12,12,11,11,11,11,11,0,10,0,12,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,23,6,4,13,6,13,13,13,11,11,11,11,11,11,11,11,11,11,11,12,12,16,8,8,8,8,16,10,10,10,5,5],"n":["AddUser","CloneSPDatabase","CreateForge","ForgeImplementation","Gitea","SCDatabase","add_user","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_db","clone_into","clone_into","clone_into","create_forge_isntance","delete_forge_instance","deserialize","deserialize","deserialize","dev","eq","eq","eq","errors","fmt","fmt","fmt","forge_exists","forge_type","forge_type_exists","from","from","from","from_str","get_hostname","hostname","hostname","html_link","into","into","into","ne","ne","ops","ping","prelude","profile_photo","serialize","serialize","serialize","tests","to_owned","to_owned","to_owned","to_str","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_exists","username","async_trait","BoxDynError","DBError","DBError","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","UnknownForgeType","borrow","borrow_mut","fmt","fmt","from","into","source","to_string","try_from","try_into","type_id","0","0","Conn","Connect","DBOps","GetConnection","Migrate","Pool","connect","get_conn","migrate","adding_forge_works","forge_type_exists_helper"],"q":["db_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_core::dev","db_core::errors","","","","","","","","","","","","","","","","","","db_core::errors::DBError","","db_core::ops","","","","","","","","","db_core::tests",""],"d":["add new user to database","Trait to clone SCDatabase","create a new forge on the database","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Gitea softare forge","Starchart’s database requirements. To implement support …","add new user to database","","","","","","","","","","clone DB","","","","create forge isntance","delete forge isntance","","","","useful imports for supporting a new database","","","","represents all the ways a trait can fail using this crate","","","","check if a forge instance exists","forge type: which software is the instance running?","check if forge type exists","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert str to ForgeImplementation","Get hostname from URL Utility function for uniform …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","html link to the user profile","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","meta operations like migration and connecting to a database","ping DB","useful imports for users working with a supported database","OPTIONAL: html link to the user’s profile photo","","","","Test utilities","","","","Convert ForgeImplementation to str","","","","","","","","","","check if an user exists. When hostname of a forge instace …","username of the user","","Convenience type alias for grouping driver-specific errors","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","forge instance type is unknown","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","database connection type","Create databse connection","Database operations trait(migrations, pool creation and …","Get database connection","database migrations","database specific pool-type","database specific error-type create connection pool","database specific error-type get connection from …","database specific error-type run migrations","adding forge works","test if all forge type implementations are loaded into DB"],"i":[0,0,0,0,1,0,2,3,4,1,3,4,1,3,4,1,5,3,4,1,2,2,3,4,1,0,3,4,1,0,3,4,1,2,3,2,3,4,1,1,0,3,4,4,3,4,1,3,4,0,2,0,4,3,4,1,0,3,4,1,1,3,4,1,3,4,1,3,4,1,2,4,0,0,0,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,8,9,0,0,0,0,10,10,9,11,0,0],"f":[null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["createforge",3]],[[["",0]],["adduser",3]],[[["",0]],["forgeimplementation",4]],[[["",0]],["box",3,[["scdatabase",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0],["createforge",3]],["bool",0]],[[["",0],["adduser",3]],["bool",0]],[[["",0],["forgeimplementation",4]],["bool",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[["str",0]],["dbresult",6]],[[["url",3]],["string",3]],null,null,null,[[]],[[]],[[]],[[["",0],["createforge",3]],["bool",0]],[[["",0],["adduser",3]],["bool",0]],null,[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],null,null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["str",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["createforge",3],["adduser",3],["adduser",3]]],[[["",0]]]],"p":[[4,"ForgeImplementation"],[8,"SCDatabase"],[3,"CreateForge"],[3,"AddUser"],[8,"CloneSPDatabase"],[4,"DBError"],[13,"UnknownForgeType"],[13,"DBError"],[8,"GetConnection"],[8,"Connect"],[8,"Migrate"]]},\
"db_sqlx_sqlite":{"doc":"","t":[12,3,4,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,3,3,6,6,8,8,13,13,13,13,16,16,8,8,3,3,4,4,13,13,8,8,6,6,13,13,13,13,13,13,4,4,4,8,8,13,13,13,8,8,13,16,16,13,13,13,13,8,8,13,13,13,13,13,10,10,11,23,11,11,10,10,10,10,10,10,10,10,0,0,0,11,11,10,10,12,12,10,10,11,11,11,11,11,10,10,5,5,12,12,12,12,12,12,11,11,10,10,0,0,10,10,0,12,12,11,0,0,11,11,11,11,10,10,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,6,8,16,8,3,4,13,8,6,13,13,4,8,13,8,16,8,13,10,23,10,10,10,10,10,12,10,10,5,12,12,12,10,10,0,12,10,12,12,12,3,6,8,16,8,3,4,13,8,6,13,13,4,8,13,8,16,8,13,10,10,10,10,10,10,12,10,10,5,12,12,12,10,10,12,10,12,12,12,6,6,4,4,13,13,6,6,13,13,13,13,13,13,12,12,12,12,16,16,8,8,8,8,8,8,8,8,16,16,10,10,10,10,10,10,3,6,8,16,8,3,4,13,8,6,13,13,4,8,13,8,16,8,13,10,10,10,10,10,0,10,12,10,10,5,12,12,12,10,10,12,10,12,12,12,3,6,8,16,8,3,4,13,8,6,13,13,4,8,13,8,16,8,13,10,23,10,10,10,10,10,12,10,10,5,12,12,12,10,10,12,10,12,12,12,5,5,5,5,5,3,6,8,16,8,3,4,13,8,6,13,13,4,8,13,8,16,8,13,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,11,11,11,0,11,11,11,0,11,11,11,11,11,10,12,10,11,11,11,11,11,10,5,12,12,12,11,11,11,11,10,11,11,0,10,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,12,12,3,6,8,16,8,3,4,13,8,6,13,13,4,8,13,8,16,8,13,10,23,10,10,10,10,10,12,10,10,5,12,12,12,10,10,0,12,10,12,12,12,3,6,8,16,8,3,4,13,8,6,13,13,4,8,13,8,16,8,13,10,10,10,10,10,10,12,10,10,5,12,12,12,10,10,12,10,12,12,12,6,4,13,6,13,13,13,12,12,16,8,8,8,8,16,10,10,10,5,5],"n":["0","Conn","ConnectionOptions","Database","Existing","Fresh","Fresh","add_user","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_db","clone_into","connect","create_forge_isntance","delete_forge_instance","dev","errors","forge_exists","forge_type_exists","from","from","from","from","into","into","into","into","migrate","ping","pool","pool_options","prelude","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","url","user_exists","vzip","vzip","vzip","vzip","0","0","AddUser","AddUser","BoxDynError","BoxDynError","CloneSPDatabase","CloneSPDatabase","ColumnDecode","ColumnIndexOutOfBounds","ColumnNotFound","Configuration","Conn","Conn","Connect","Connect","CreateForge","CreateForge","DBError","DBError","DBError","DBError","DBOps","DBOps","DBResult","DBResult","Database","Decode","DuplicateChallengeHostname","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateChallengeText","Error","ForgeImplementation","ForgeImplementation","GetConnection","GetConnection","Gitea","Gitea","Io","Migrate","Migrate","Migrate","Pool","Pool","PoolClosed","PoolTimedOut","Protocol","RowNotFound","SCDatabase","SCDatabase","Tls","TypeNotFound","UnknownForgeType","UnknownForgeType","WorkerCrashed","add_user","add_user","as_database_error","async_trait","borrow","borrow_mut","clone_db","clone_db","connect","connect","create_forge_isntance","create_forge_isntance","delete_forge_instance","delete_forge_instance","dev","errors","errors","fmt","fmt","forge_exists","forge_exists","forge_type","forge_type","forge_type_exists","forge_type_exists","from","from","from","from","from","get_conn","get_conn","get_hostname","get_hostname","hostname","hostname","hostname","hostname","html_link","html_link","into","into_database_error","migrate","migrate","ops","ops","ping","ping","prelude","profile_photo","profile_photo","source","tests","tests","to_string","try_from","try_into","type_id","user_exists","user_exists","username","username","vzip","0","0","0","0","0","0","0","0","0","0","0","0","index","index","len","source","type_name","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","SCDatabase","UnknownForgeType","add_user","async_trait","clone_db","connect","create_forge_isntance","delete_forge_instance","forge_exists","forge_type","forge_type_exists","get_conn","get_hostname","hostname","hostname","html_link","migrate","ping","prelude","profile_photo","user_exists","username","0","0","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","SCDatabase","UnknownForgeType","add_user","clone_db","connect","create_forge_isntance","delete_forge_instance","forge_exists","forge_type","forge_type_exists","get_conn","get_hostname","hostname","hostname","html_link","migrate","ping","profile_photo","user_exists","username","0","0","BoxDynError","BoxDynError","DBError","DBError","DBError","DBError","DBResult","DBResult","DuplicateChallengeHostname","DuplicateChallengeHostname","DuplicateChallengeText","DuplicateChallengeText","UnknownForgeType","UnknownForgeType","0","0","0","0","Conn","Conn","Connect","Connect","DBOps","DBOps","GetConnection","GetConnection","Migrate","Migrate","Pool","Pool","connect","connect","get_conn","get_conn","migrate","migrate","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","SCDatabase","UnknownForgeType","add_user","clone_db","connect","create_forge_isntance","delete_forge_instance","dev","forge_exists","forge_type","forge_type_exists","get_conn","get_hostname","hostname","hostname","html_link","migrate","ping","profile_photo","user_exists","username","0","0","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","SCDatabase","UnknownForgeType","add_user","async_trait","clone_db","connect","create_forge_isntance","delete_forge_instance","forge_exists","forge_type","forge_type_exists","get_conn","get_hostname","hostname","hostname","html_link","migrate","ping","profile_photo","user_exists","username","0","0","adding_forge_works","adding_forge_works","forge_type_exists_helper","forge_type_exists_helper","map_register_err","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","SCDatabase","UnknownForgeType","add_user","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_db","clone_into","clone_into","clone_into","connect","create_forge_isntance","delete_forge_instance","deserialize","deserialize","deserialize","dev","eq","eq","eq","errors","fmt","fmt","fmt","fmt","fmt","forge_exists","forge_type","forge_type_exists","from","from","from","from","from_str","get_conn","get_hostname","hostname","hostname","html_link","into","into","into","into","migrate","ne","ne","ops","ping","profile_photo","serialize","serialize","serialize","source","tests","to_owned","to_owned","to_owned","to_str","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_exists","username","vzip","vzip","vzip","vzip","0","0","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","SCDatabase","UnknownForgeType","add_user","async_trait","clone_db","connect","create_forge_isntance","delete_forge_instance","forge_exists","forge_type","forge_type_exists","get_conn","get_hostname","hostname","hostname","html_link","migrate","ping","prelude","profile_photo","user_exists","username","0","0","AddUser","BoxDynError","CloneSPDatabase","Conn","Connect","CreateForge","DBError","DBError","DBOps","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","ForgeImplementation","GetConnection","Gitea","Migrate","Pool","SCDatabase","UnknownForgeType","add_user","clone_db","connect","create_forge_isntance","delete_forge_instance","forge_exists","forge_type","forge_type_exists","get_conn","get_hostname","hostname","hostname","html_link","migrate","ping","profile_photo","user_exists","username","0","0","BoxDynError","DBError","DBError","DBResult","DuplicateChallengeHostname","DuplicateChallengeText","UnknownForgeType","0","0","Conn","Connect","DBOps","GetConnection","Migrate","Pool","connect","get_conn","migrate","adding_forge_works","forge_type_exists_helper"],"q":["db_sqlx_sqlite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::ConnectionOptions","","db_sqlx_sqlite::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::DBError","","","","db_sqlx_sqlite::dev::Error","","","","","","","","","","","","","db_sqlx_sqlite::dev::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::dev::DBError","","db_sqlx_sqlite::dev::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::dev::prelude::DBError","","db_sqlx_sqlite::dev::errors","","","","","","","","","","","","","","db_sqlx_sqlite::dev::errors::DBError","","","","db_sqlx_sqlite::dev::ops","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::prelude::DBError","","db_sqlx_sqlite::dev::prelude::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::dev::prelude::dev::DBError","","db_sqlx_sqlite::dev::tests","","","","db_sqlx_sqlite::errors","db_sqlx_sqlite::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::DBError","","db_sqlx_sqlite::prelude::dev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::dev::DBError","","db_sqlx_sqlite::prelude::dev::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","db_sqlx_sqlite::prelude::dev::prelude::DBError","","db_sqlx_sqlite::prelude::errors","","","","","","","db_sqlx_sqlite::prelude::errors::DBError","","db_sqlx_sqlite::prelude::ops","","","","","","","","","db_sqlx_sqlite::prelude::tests",""],"d":["","Use an existing database pool","Connect to databse","","existing connection","","fresh connection","add new user to database","","","","","","","","","","","","","create forge isntance DB","delete forge isntance","","","check if a forge instance exists","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","ping DB","","","","","","","","","","","","","","","","","","check if an user exists. When hostname of a forge instace …","","","","","","","add new user to database","add new user to database","Convenience type alias for grouping driver-specific errors","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","Trait to clone SCDatabase","Error occurred while decoding a value from a specific …","Column index was out of bounds.","No column found for the given name.","Error occurred while parsing a connection string.","database connection type","database connection type","Create databse connection","Create databse connection","create a new forge on the database","create a new forge on the database","Error data structure grouping various error subtypes","Error data structure grouping various error subtypes","errors that are specific to a database implementation","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Database operations trait(migrations, pool creation and …","Generic result data structure","Generic result data structure","Error returned from the database.","Error occurred while decoding a value.","DNS challenge hostname is already taken","DNS challenge hostname is already taken","DNS challenge value is already taken","DNS challenge value is already taken","Represents all the ways a method can fail within SQLx.","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Get database connection","Gitea softare forge","Gitea softare forge","Error communicating with the database backend.","database migrations","database migrations","","database specific pool-type","database specific pool-type","<code>Pool::close</code> was called while we were waiting in …","A <code>Pool::acquire</code> timed out due to connections not becoming …","Unexpected or invalid data encountered while communicating …","No rows returned by a query that expected to return at …","Starchart’s database requirements. To implement support …","Starchart’s database requirements. To implement support …","Error occurred while attempting to establish a TLS …","Type in query doesn’t exist. Likely due to typo or …","forge instance type is unknown","forge instance type is unknown","A background worker has crashed.","add new user to database","add new user to database","","","","","clone DB","clone DB","database specific error-type create connection pool","database specific error-type create connection pool","create forge isntance","create forge isntance","delete forge isntance","delete forge isntance","useful imports for supporting a new database","represents all the ways a trait can fail using this crate","represents all the ways a trait can fail using this crate","","","check if a forge instance exists","check if a forge instance exists","forge type: which software is the instance running?","forge type: which software is the instance running?","check if forge type exists","check if forge type exists","","","","","Returns the argument unchanged.","database specific error-type get connection from …","database specific error-type get connection from …","Get hostname from URL Utility function for uniform …","Get hostname from URL Utility function for uniform …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","html link to the user profile","html link to the user profile","Calls <code>U::from(self)</code>.","","database specific error-type run migrations","database specific error-type run migrations","meta operations like migration and connecting to a database","meta operations like migration and connecting to a database","ping DB","ping DB","useful imports for users working with a supported database","OPTIONAL: html link to the user’s profile photo","OPTIONAL: html link to the user’s profile photo","","Test utilities","Test utilities","","","","","check if an user exists. When hostname of a forge instace …","check if an user exists. When hostname of a forge instace …","username of the user","username of the user","","","","","","","","","","","","","","","","","","","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","Starchart’s database requirements. To implement support …","forge instance type is unknown","add new user to database","","clone DB","database specific error-type create connection pool","create forge isntance","delete forge isntance","check if a forge instance exists","forge type: which software is the instance running?","check if forge type exists","database specific error-type get connection from …","Get hostname from URL Utility function for uniform …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","html link to the user profile","database specific error-type run migrations","ping DB","useful imports for users working with a supported database","OPTIONAL: html link to the user’s profile photo","check if an user exists. When hostname of a forge instace …","username of the user","","","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","Starchart’s database requirements. To implement support …","forge instance type is unknown","add new user to database","clone DB","database specific error-type create connection pool","create forge isntance","delete forge isntance","check if a forge instance exists","forge type: which software is the instance running?","check if forge type exists","database specific error-type get connection from …","Get hostname from URL Utility function for uniform …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","html link to the user profile","database specific error-type run migrations","ping DB","OPTIONAL: html link to the user’s profile photo","check if an user exists. When hostname of a forge instace …","username of the user","","","Convenience type alias for grouping driver-specific errors","Convenience type alias for grouping driver-specific errors","Error data structure grouping various error subtypes","Error data structure grouping various error subtypes","errors that are specific to a database implementation","errors that are specific to a database implementation","Generic result data structure","Generic result data structure","DNS challenge hostname is already taken","DNS challenge hostname is already taken","DNS challenge value is already taken","DNS challenge value is already taken","forge instance type is unknown","forge instance type is unknown","","","","","database connection type","database connection type","Create databse connection","Create databse connection","Database operations trait(migrations, pool creation and …","Database operations trait(migrations, pool creation and …","Get database connection","Get database connection","database migrations","database migrations","database specific pool-type","database specific pool-type","database specific error-type create connection pool","database specific error-type create connection pool","database specific error-type get connection from …","database specific error-type get connection from …","database specific error-type run migrations","database specific error-type run migrations","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","Starchart’s database requirements. To implement support …","forge instance type is unknown","add new user to database","clone DB","database specific error-type create connection pool","create forge isntance","delete forge isntance","useful imports for supporting a new database","check if a forge instance exists","forge type: which software is the instance running?","check if forge type exists","database specific error-type get connection from …","Get hostname from URL Utility function for uniform …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","html link to the user profile","database specific error-type run migrations","ping DB","OPTIONAL: html link to the user’s profile photo","check if an user exists. When hostname of a forge instace …","username of the user","","","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","Starchart’s database requirements. To implement support …","forge instance type is unknown","add new user to database","","clone DB","database specific error-type create connection pool","create forge isntance","delete forge isntance","check if a forge instance exists","forge type: which software is the instance running?","check if forge type exists","database specific error-type get connection from …","Get hostname from URL Utility function for uniform …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","html link to the user profile","database specific error-type run migrations","ping DB","OPTIONAL: html link to the user’s profile photo","check if an user exists. When hostname of a forge instace …","username of the user","","","adding forge works","adding forge works","test if all forge type implementations are loaded into DB","test if all forge type implementations are loaded into DB","","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","Starchart’s database requirements. To implement support …","forge instance type is unknown","add new user to database","","","","","","","","","","","","clone DB","","","","database specific error-type create connection pool","create forge isntance","delete forge isntance","","","","useful imports for supporting a new database","","","","represents all the ways a trait can fail using this crate","","","","","","check if a forge instance exists","forge type: which software is the instance running?","check if forge type exists","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert str to ForgeImplementation","database specific error-type get connection from …","Get hostname from URL Utility function for uniform …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","html link to the user profile","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","database specific error-type run migrations","","","meta operations like migration and connecting to a database","ping DB","OPTIONAL: html link to the user’s profile photo","","","","","Test utilities","","","","Convert ForgeImplementation to str","","","","","","","","","","","","","","check if an user exists. When hostname of a forge instace …","username of the user","","","","","","","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","Starchart’s database requirements. To implement support …","forge instance type is unknown","add new user to database","","clone DB","database specific error-type create connection pool","create forge isntance","delete forge isntance","check if a forge instance exists","forge type: which software is the instance running?","check if forge type exists","database specific error-type get connection from …","Get hostname from URL Utility function for uniform …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","html link to the user profile","database specific error-type run migrations","ping DB","useful imports for users working with a supported database","OPTIONAL: html link to the user’s profile photo","check if an user exists. When hostname of a forge instace …","username of the user","","","add new user to database","Convenience type alias for grouping driver-specific errors","Trait to clone SCDatabase","database connection type","Create databse connection","create a new forge on the database","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Database operations trait(migrations, pool creation and …","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","Forge type: Gitea, Sourcehut, GitLab, etc. Support is …","Get database connection","Gitea softare forge","database migrations","database specific pool-type","Starchart’s database requirements. To implement support …","forge instance type is unknown","add new user to database","clone DB","database specific error-type create connection pool","create forge isntance","delete forge isntance","check if a forge instance exists","forge type: which software is the instance running?","check if forge type exists","database specific error-type get connection from …","Get hostname from URL Utility function for uniform …","hostname of the forge instance: with scheme but remove …","hostname of the forge instance: with scheme but remove …","html link to the user profile","database specific error-type run migrations","ping DB","OPTIONAL: html link to the user’s profile photo","check if an user exists. When hostname of a forge instace …","username of the user","","","Convenience type alias for grouping driver-specific errors","Error data structure grouping various error subtypes","errors that are specific to a database implementation","Generic result data structure","DNS challenge hostname is already taken","DNS challenge value is already taken","forge instance type is unknown","","","database connection type","Create databse connection","Database operations trait(migrations, pool creation and …","Get database connection","database migrations","database specific pool-type","database specific error-type create connection pool","database specific error-type get connection from …","database specific error-type run migrations","adding forge works","test if all forge type implementations are loaded into DB"],"i":[1,0,0,0,2,0,2,3,1,2,4,3,1,2,4,3,3,3,3,2,3,3,0,0,3,3,1,2,4,3,1,2,4,3,3,3,3,4,0,3,1,2,4,3,1,2,4,3,1,2,4,3,4,3,1,2,4,3,5,6,0,0,0,0,0,0,7,7,7,7,8,8,0,0,0,0,0,0,9,9,0,0,0,0,7,7,9,9,9,9,0,0,0,0,0,10,10,7,0,0,7,11,11,7,7,7,7,0,0,7,7,9,9,7,12,12,7,0,7,7,13,13,11,11,12,12,12,12,0,0,0,7,7,12,12,14,14,12,12,7,7,7,7,7,8,8,0,0,14,14,15,15,15,15,7,7,16,16,0,0,12,12,0,15,15,7,0,0,7,7,7,7,12,12,15,15,7,17,17,18,18,19,20,21,22,23,24,25,26,27,28,27,28,29,0,0,0,8,0,0,0,9,0,0,9,9,0,0,10,0,11,0,9,12,0,13,11,12,12,12,14,12,8,0,14,15,15,16,12,0,15,12,15,17,18,0,0,0,8,0,0,0,9,0,0,9,9,0,0,10,0,11,0,9,12,13,11,12,12,12,14,12,8,0,14,15,15,16,12,15,12,15,17,18,0,0,0,0,9,9,0,0,9,9,9,9,9,9,17,17,18,18,8,8,0,0,0,0,0,0,0,0,11,11,11,11,8,8,16,16,0,0,0,8,0,0,0,9,0,0,9,9,0,0,10,0,11,0,9,12,13,11,12,12,0,12,14,12,8,0,14,15,15,16,12,15,12,15,17,18,0,0,0,8,0,0,0,9,0,0,9,9,0,0,10,0,11,0,9,12,0,13,11,12,12,12,14,12,8,0,14,15,15,16,12,15,12,15,17,18,0,0,0,0,0,0,0,0,8,0,0,0,9,0,0,9,9,0,0,10,0,11,0,9,12,9,14,15,10,9,14,15,10,14,15,10,13,14,15,10,11,12,12,14,15,10,0,14,15,10,0,9,9,14,15,10,12,14,12,9,14,15,10,10,8,0,14,15,15,9,14,15,10,16,14,15,0,12,15,14,15,10,9,0,14,15,10,10,9,9,14,15,10,9,14,15,10,9,14,15,10,12,15,9,14,15,10,17,18,0,0,0,8,0,0,0,9,0,0,9,9,0,0,10,0,11,0,9,12,0,13,11,12,12,12,14,12,8,0,14,15,15,16,12,0,15,12,15,17,18,0,0,0,8,0,0,0,9,0,0,9,9,0,0,10,0,11,0,9,12,13,11,12,12,12,14,12,8,0,14,15,15,16,12,15,12,15,17,18,0,0,9,0,9,9,9,17,18,8,0,0,0,0,11,11,8,16,0,0],"f":[null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["database",3]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[["",0],["",0]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],null,null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["option",4,[["databaseerror",8]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["error",4]],[[["error",3]],["error",4]],[[["invaliddnsnameerror",3]],["error",4]],[[["migrateerror",4]],["error",4]],[[]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],[[["url",3]],["string",3]],null,null,null,null,null,null,[[]],[[],["option",4,[["box",3,[["databaseerror",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,[[["",0]],["option",4,[["error",8]]]],null,null,[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,[[["",0],["createforge",3],["adduser",3],["adduser",3]]],[[["",0],["createforge",3],["adduser",3],["adduser",3]]],[[["",0]]],[[["",0]]],[[["error",4]],["dberror",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["createforge",3]],[[["",0]],["adduser",3]],[[["",0]],["forgeimplementation",4]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["result",4,[["createforge",3]]]],[[],["result",4,[["adduser",3]]]],[[],["result",4,[["forgeimplementation",4]]]],null,[[["",0],["createforge",3]],["bool",0]],[[["",0],["adduser",3]],["bool",0]],[[["",0],["forgeimplementation",4]],["bool",0]],null,[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["forgeimplementation",4],["dberror",4]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],null,null,null,[[]],[[]],[[]],[[]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["bool",0]],[[["",0],["adduser",3]],["bool",0]],null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["option",4,[["error",8]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["str",0]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adduser",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["box",3,[["scdatabase",8],["global",3]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0],["forgeimplementation",4]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["url",3]],["string",3]],null,null,null,[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,[[["",0],["str",0],["option",4,[["str",0]]]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["",0],["createforge",3],["adduser",3],["adduser",3]]],[[["",0]]]],"p":[[3,"Conn"],[4,"ConnectionOptions"],[3,"Database"],[3,"Fresh"],[13,"Fresh"],[13,"Existing"],[4,"Error"],[8,"GetConnection"],[4,"DBError"],[4,"ForgeImplementation"],[8,"Connect"],[8,"SCDatabase"],[8,"CloneSPDatabase"],[3,"CreateForge"],[3,"AddUser"],[8,"Migrate"],[13,"UnknownForgeType"],[13,"DBError"],[13,"Configuration"],[13,"Database"],[13,"Io"],[13,"Tls"],[13,"Protocol"],[13,"ColumnNotFound"],[13,"Decode"],[13,"Migrate"],[13,"ColumnIndexOutOfBounds"],[13,"ColumnDecode"],[13,"TypeNotFound"]]},\
"starchart":{"doc":"","t":[17,17,17,17,0,0,0,5,0,0,0,0,17,3,3,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,6,0,5,13,3,13,3,13,4,13,3,3,3,3,3,13,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,12,12,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,3,4,3,3,13,13,13,4,13,3,3,3,13,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,5,5,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,17,17,5,17,3,17,12,11,11,11,11,11,12,11,11,11,11,12,11,11],"n":["DOMAIN","GIT_COMMIT_HASH","PKG_NAME","VERSION","data","db","gitea","main","settings","spider","utils","verify","CLIENT_TIMEOUT","Data","USER_AGENT","__private_field","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone_into","crawl","deref","from","from","into","into","is_gitea","new","settings","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BoxDB","sqlite","get_data","Admin","InternalIssueTracker","None","Organization","Owner","Permission","Read","RepoTransfer","Repository","SearchResults","Team","User","Write","active","allow_merge_commits","allow_only_contributors_to_track_time","allow_rebase","allow_rebase_explicit","allow_squash_merge","archived","avatar_url","avatar_url","avatar_url","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_create_org_repo","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_url","created","created_at","data","default_branch","default_merge_style","description","description","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","doer","email","empty","enable_issue_dependencies","enable_time_tracker","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","followers_count","following_count","fork","forks_count","from","from","from","from","from","from","from","from","full_name","full_name","full_name","get_hash","get_hash","get_hash","has_issues","has_projects","has_pull_requests","has_wiki","hash","hash","hash","html_url","id","id","id","ignore_whitespace_conflicts","includes_all_repositories","internal","internal_tracker","into","into","into","into","into","into","into","into","is_admin","language","last_login","location","location","login","mirror","mirror_interval","mirror_updated","name","name","ne","ne","ne","ne","ne","ne","ne","ok","open_issues_count","open_pr_counter","organization","original_url","owner","parent","permission","private","prohibit_login","recipient","release_counter","repo_admin_change_team_access","repo_transfer","restricted","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","ssh_url","starred_repos_count","stars_count","teams","template","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","units","units_map","updated_at","username","username","visibility","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","watchers_count","website","website","website","Crawler","DBType","Database","DatabaseBuilder","Debug","Error","Info","LogLevel","Postgres","Repository","Server","Settings","Sqlite","Trace","Warn","admin_email","allow_new_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_url","client_timeout","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","crawler","create_root_dir","database","database_type","database_type","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","domain","eq","extract_database_url","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_url","get_ip","hostname","into","into","into","into","into","into","into","into","ip","items_per_api_call","log","name","new","password","pool","port","port","proxy_has_tls","repository","root","server","set_database_url","set_from_database_url","set_log_level","set_source_code","source_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","username","validate","validate","validate_args","validate_args","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_before_next_api_call","GITEA_NODEINFO","REPO_SEARCH_PATH","get_random","KEY_LEN","TXTChallenge","VALUES_LEN","base_hostname","borrow","borrow_mut","from","get_txt_key","into","key","new","try_from","try_into","type_id","value","verify_txt","vzip"],"q":["starchart","","","","","","","","","","","","starchart::data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::db","","starchart::db::sqlite","starchart::gitea","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::spider","","starchart::utils","starchart::verify","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","in seconds","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","purpose: interact with instance running on provided …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,1,2,2,2,2,2,1,1,2,1,2,2,2,2,2,1,2,1,2,1,2,1,2,0,0,0,3,0,3,0,3,0,3,0,0,0,0,0,3,4,5,6,5,5,5,5,4,5,7,8,4,5,6,9,7,3,10,8,4,5,6,9,7,3,10,10,8,4,5,6,9,7,3,10,8,4,5,6,9,7,3,10,5,4,5,8,5,5,4,5,7,10,8,4,5,6,9,7,3,10,9,4,5,6,6,8,4,5,6,9,7,3,10,4,8,4,5,6,9,7,3,10,4,4,5,5,8,4,5,6,9,7,3,10,4,5,7,4,7,3,5,5,5,5,4,7,3,5,4,7,10,5,10,5,5,8,4,5,6,9,7,3,10,4,4,4,4,7,4,5,5,5,5,10,8,4,5,6,9,7,10,8,5,5,10,5,5,5,10,5,4,9,5,7,5,4,8,4,5,6,9,7,3,10,5,5,4,5,9,5,8,4,5,6,9,7,3,10,8,4,5,6,9,7,3,10,8,4,5,6,9,7,3,10,8,4,5,6,9,7,3,10,10,10,5,4,7,4,7,8,4,5,6,9,7,3,10,5,4,5,7,0,0,0,0,11,11,11,0,12,0,0,0,12,11,11,13,13,14,11,15,12,16,17,18,13,14,11,15,12,16,17,18,13,0,18,14,11,15,12,16,17,18,13,14,11,15,12,16,17,18,13,13,15,13,16,17,14,11,15,12,16,17,18,13,14,12,16,14,11,11,15,12,12,16,17,18,13,14,11,15,12,16,17,18,13,12,14,16,14,11,15,12,16,17,18,13,14,18,13,16,13,16,17,14,16,14,13,15,13,0,0,11,13,13,14,11,15,12,16,17,18,13,11,12,14,11,15,12,16,17,18,13,14,11,15,12,16,17,18,13,18,14,11,15,12,16,17,18,13,17,16,18,13,18,13,14,11,15,12,16,17,18,13,18,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19],"f":[null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["data",3]],[[["",0],["",0]]],[[["",0],["str",0],["boxdb",6]]],[[["",0]],["string",3]],[[]],[[]],[[]],[[]],[[["",0],["str",0]]],[[["settings",3]]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,[[["option",4,[["settings",3]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["searchresults",3]],[[["",0]],["user",3]],[[["",0]],["repository",3]],[[["",0]],["internalissuetracker",3]],[[["",0]],["repotransfer",3]],[[["",0]],["organization",3]],[[["",0]],["permission",4]],[[["",0]],["team",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,[[["",0],["searchresults",3]],["bool",0]],[[["",0],["user",3]],["bool",0]],[[["",0],["repository",3]],["bool",0]],[[["",0],["internalissuetracker",3]],["bool",0]],[[["",0],["repotransfer",3]],["bool",0]],[[["",0],["organization",3]],["bool",0]],[[["",0],["permission",4]],["bool",0]],[[["",0],["team",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],null,null,null,null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["",0],["searchresults",3]],["bool",0]],[[["",0],["user",3]],["bool",0]],[[["",0],["repository",3]],["bool",0]],[[["",0],["internalissuetracker",3]],["bool",0]],[[["",0],["repotransfer",3]],["bool",0]],[[["",0],["organization",3]],["bool",0]],[[["",0],["team",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["config",3]]],null,[[["",0]],["server",3]],[[["",0]],["loglevel",4]],[[["",0]],["repository",3]],[[["",0]],["dbtype",4]],[[["",0]],["databasebuilder",3]],[[["",0]],["database",3]],[[["",0]],["crawler",3]],[[["",0]],["settings",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["",0]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0],["dbtype",4]],["bool",0]],[[["url",3]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["url",3]],["result",4,[["configerror",4]]]],[[["",0]],["string",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["result",4,[["configerror",4]]]],null,null,null,null,null,null,null,null,[[["config",3]]],[[["config",3],["databasebuilder",3]]],[[["",0]]],[[["",0]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["result",4,[["validationerrors",3]]]],[[["",0]],["result",4,[["validationerrors",3]]]],[[["",0]],["result",4,[["validationerrors",3]]]],[[["",0]],["result",4,[["validationerrors",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["usize",0]],["string",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["",0]],["string",3]],[[]],null,[[["str",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]]],[[]]],"p":[[3,"USER_AGENT"],[3,"Data"],[4,"Permission"],[3,"User"],[3,"Repository"],[3,"InternalIssueTracker"],[3,"Organization"],[3,"SearchResults"],[3,"RepoTransfer"],[3,"Team"],[4,"LogLevel"],[4,"DBType"],[3,"Settings"],[3,"Server"],[3,"Repository"],[3,"DatabaseBuilder"],[3,"Database"],[3,"Crawler"],[3,"TXTChallenge"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};