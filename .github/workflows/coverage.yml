name: Coverage

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version:
          - stable

            #    services:
            #      postgres:
            #        image: postgres
            #        env:
            #          POSTGRES_PASSWORD: password
            #          POSTGRES_USER: postgres
            #          POSTGRES_DB: postgres
            #        options: >-
            #          --health-cmd pg_isready
            #          --health-interval 10s
            #          --health-timeout 5s
            #          --health-retries 5
            #        ports:
            #          - 5432:5432

    name: ${{ matrix.version }} - x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: load env
        run: |
          mkdir -p db/db-sqlx-sqlite/tmp &&
          source .env-sample \
            && echo "POSTGRES_DATABASE_URL=$POSTGRES_DATABASE_URL" >> $GITHUB_ENV \
            && echo "SQLITE_DATABASE_URL=$SQLITE_DATABASE_URL" >> $GITHUB_ENV

      # usually run as part of `make test` but because this workflow doesn't run
      # that command, `make dev-env` is used
      - name: setup dev environment
        run: make dev-env
        env:
          GIT_HASH: 8e77345f1597e40c2e266cb4e6dee74888918a61 # dummy value
          POSTGRES_DATABASE_URL: "${{ env.POSTGRES_DATABASE_URL }}"
          SQLITE_DATABASE_URL: "${{ env.SQLITE_DATABASE_URL }}"

      - name: run migrations
        run: make migrate
        env:
          GIT_HASH: 8e77345f1597e40c2e266cb4e6dee74888918a61 # dummy value
          POSTGRES_DATABASE_URL: "${{ env.POSTGRES_DATABASE_URL }}"
          SQLITE_DATABASE_URL: "${{ env.SQLITE_DATABASE_URL }}"

      - name: Generate coverage file
        if: matrix.version == 'stable' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        uses: actions-rs/tarpaulin@v0.1
        env:
          # GIT_HASH is dummy value. I guess build.rs is skipped in tarpaulin
          # execution so this value is required for preventing meta tests from
          # panicking
          GIT_HASH: 8e77345f1597e40c2e266cb4e6dee74888918a61
          POSTGRES_DATABASE_URL: "${{ env.POSTGRES_DATABASE_URL }}"
          SQLITE_DATABASE_URL: "${{ env.SQLITE_DATABASE_URL }}"
        with:
          args: "--all-features --no-fail-fast --workspace=db/db-sqlx-sqlite,. -t 1200"
          #          args: "--all-features --no-fail-fast --workspace=database/db-sqlx-postgres,database/db-sqlx-sqlite,. -t 1200"

      - name: Upload to Codecov
        if: matrix.version == 'stable' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        uses: codecov/codecov-action@v2
