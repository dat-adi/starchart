name: Build

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version:
          - stable
            #  - nightly

    name: ${{ matrix.version }} - x86_64-unknown-linux-gnu
    runs-on:
      ubuntu-latest

      #    services:
      #      postgres:
      #        image: postgres
      #        env:
      #          POSTGRES_PASSWORD: password
      #          POSTGRES_USER: postgres
      #          POSTGRES_DB: postgres
      #        options: >-
      #          --health-cmd pg_isready
      #          --health-interval 10s
      #          --health-timeout 5s
      #          --health-retries 5
      #        ports:
      #          - 5432:5432
      #
    steps:
      - uses: actions/checkout@v2
      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            /var/lib/docker
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

          #      - name: Login to DockerHub
          #        if: (github.ref == 'refs/heads/master' || github.event_name == 'push') && github.repository == 'forgeflux-org/starchart'
          #        uses: docker/login-action@v1
          #        with:
          #          username: ${{ secrets.DOCKERHUB_USERNAME }}
          #          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: load env
        run: |
          mkdir -p db/db-sqlx-sqlite/tmp &&
          source .env-sample \
            && echo "POSTGRES_DATABASE_URL=$POSTGRES_DATABASE_URL" >> $GITHUB_ENV \
            && echo "SQLITE_DATABASE_URL=$SQLITE_DATABASE_URL" >> $GITHUB_ENV

      - name: run migrations
        run: make migrate
        env:
          GIT_HASH: 8e77345f1597e40c2e266cb4e6dee74888918a61 # dummy value
          POSTGRES_DATABASE_URL: "${{ env.POSTGRES_DATABASE_URL }}"
          SQLITE_DATABASE_URL: "${{ env.SQLITE_DATABASE_URL }}"

      - name: build
        run:
          make
        env:
          POSTGRES_DATABASE_URL: "${{ env.POSTGRES_DATABASE_URL }}"
          SQLITE_DATABASE_URL: "${{ env.SQLITE_DATABASE_URL }}"

          #      - name: build docker images
          #        if: matrix.version == 'stable'
          #        run: make docker
          #
          #      - name: publish docker images
          #        if: matrix.version == 'stable' && (github.ref == 'refs/heads/master' || github.event_name == 'push') && github.repository == 'forgeflux-org/starchart'
          #        run: make docker-publish
          #
      - name: run tests
        timeout-minutes: 40
        run:
          make test
        env:
          GIT_HASH: 8e77345f1597e40c2e266cb4e6dee74888918a61 # dummy value
          POSTGRES_DATABASE_URL: "${{ env.POSTGRES_DATABASE_URL }}"
          SQLITE_DATABASE_URL: "${{ env.SQLITE_DATABASE_URL }}"

      - name: generate documentation
        if: matrix.version == 'stable' && (github.ref == 'refs/heads/master' || github.event_name == 'push') && github.repository == 'forgeflux-org/starchart'
        run:
          make doc
        env:
          GIT_HASH: 8e77345f1597e40c2e266cb4e6dee74888918a61 # dummy value
          POSTGRES_DATABASE_URL: "${{ env.POSTGRES_DATABASE_URL }}"
          SQLITE_DATABASE_URL: "${{ env.SQLITE_DATABASE_URL }}"

      - name: Deploy to GitHub Pages
        if: matrix.version == 'stable' && (github.ref == 'refs/heads/master' || github.event_name == 'push') && github.repository == 'forgeflux-org/starchart'
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          branch: gh-pages
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FOLDER:
            ./target/doc/

            #      - name: deploy
            #        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'realaravinth/realaravinth' }}
            #        run: >-
            #          curl --location --request POST "https://deploy.batsense.net/api/v1/update" --header 'Content-Type: application/json' --data-raw "{ \"secret\": \"${{ secrets.DEPLOY_TOKEN }}\", \"branch\": \"gh-pages\" }"
